# Рассмотрим некоторую доску размера n*m в левом верхнем углу которой находится автомобиль.
# Этот автомобиль может перемещаться только вправо, вниз или по диагонали вправо-вниз на одну клетку.
#
# Необходимо определить количество различных маршрутов автомобиля, приводящих его в правый нижний угол.
#
# При решении нельзя пользоваться никакими уже реализованными решениями, которое сразу дают ответ.
# Алгоритм должен быть реализован самостоятельно.

from typing import List


def car_paths(n: int, m: int) -> List[List[int]]:
    """
    Просчитать количество маршрутов до каждой клетки с учетом возможных перемещений.

    :param n: Количество строк в таблице
    :param m: Количество столбцов в таблице

    :return: Новую таблицу с посчитанным количеством маршрутов в каждую клетку
    """
    ...  # TODO решить задачу с помощью динамического программирования


if __name__ == '__main__':
    paths = car_paths(4, 2)
    print(paths[-1][-1])  # 7
